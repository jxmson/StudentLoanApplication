// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using StudentLoan.Models;

namespace StudentLoan.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20210716135719_ChangedApp")]
    partial class ChangedApp
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.7")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("StudentLoan.Models.Entities.Application", b =>
                {
                    b.Property<int>("ApplicationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AccountNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Address1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Address2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Address3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Bank")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Branch")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Cell")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DOB")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateOfCompletion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateOfCompletion2")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateOfCompletion3")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateOfSchoolCompletion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateofAdmission")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateofAdmission2")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateofAdmission3")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GuarantorAddress1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GuarantorAddress2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GuarantorAddress3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GuarantorCell")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GuarantorCity")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GuarantorCountry")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GuarantorHome")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GuarantorID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GuarantorName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GuarantorSuburb")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GuarantorSurname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GuarantorWork")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GuarantorZip")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HighSchool")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Home")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IDNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Institution")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Institution2SAUniversityId")
                        .HasColumnType("int");

                    b.Property<int?>("Institution3SAUniversityId")
                        .HasColumnType("int");

                    b.Property<string>("MaritalStatus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameOnAccount")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Occupation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OtherName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Programme")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Programme2SACoursesId")
                        .HasColumnType("int");

                    b.Property<int?>("Programme3SACoursesId")
                        .HasColumnType("int");

                    b.Property<string>("QualificationObtained")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StudentNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StudentNumber2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StudentNumber3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Suburb")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Work")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Zip")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ApplicationId");

                    b.HasIndex("Institution2SAUniversityId");

                    b.HasIndex("Institution3SAUniversityId");

                    b.HasIndex("Programme2SACoursesId");

                    b.HasIndex("Programme3SACoursesId");

                    b.ToTable("Applications");
                });

            modelBuilder.Entity("StudentLoan.Models.SACourses", b =>
                {
                    b.Property<int>("SACoursesId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Cost")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Course")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Field")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Postgrad")
                        .HasColumnType("bit");

                    b.Property<bool>("Undergrad")
                        .HasColumnType("bit");

                    b.HasKey("SACoursesId");

                    b.ToTable("SACourses");

                    b.HasData(
                        new
                        {
                            SACoursesId = 1,
                            Cost = 90000m,
                            Course = "Economics Specialization (Development, Policy, Econometrics, Health, Mining, Transport and Financial) and Statistics Specialization",
                            Field = "Economics and Statistics",
                            Postgrad = true,
                            Undergrad = false
                        },
                        new
                        {
                            SACoursesId = 2,
                            Cost = 145000m,
                            Course = "Air Craft Mechanics and Aviation Studies (Aeronautical Engineering)",
                            Field = "Avionics",
                            Postgrad = true,
                            Undergrad = true
                        },
                        new
                        {
                            SACoursesId = 3,
                            Cost = 145000m,
                            Course = "Aeronautical information service (communication; navigation; surveillance)",
                            Field = "Avionics",
                            Postgrad = true,
                            Undergrad = true
                        },
                        new
                        {
                            SACoursesId = 4,
                            Cost = 145000m,
                            Course = "Airport Maintenance",
                            Field = "Avionics",
                            Postgrad = true,
                            Undergrad = true
                        },
                        new
                        {
                            SACoursesId = 5,
                            Cost = 145000m,
                            Course = "MBA Aviation",
                            Field = "Avionics",
                            Postgrad = true,
                            Undergrad = true
                        },
                        new
                        {
                            SACoursesId = 6,
                            Cost = 145000m,
                            Course = "Cargo management (will be covered under supply chain management",
                            Field = "Avionics",
                            Postgrad = true,
                            Undergrad = true
                        },
                        new
                        {
                            SACoursesId = 7,
                            Cost = 200000m,
                            Course = "Bsc Clinincal Psychology",
                            Field = "Health Sciences",
                            Postgrad = true,
                            Undergrad = true
                        },
                        new
                        {
                            SACoursesId = 8,
                            Cost = 200000m,
                            Course = "Medicine (MBCHB)",
                            Field = "Health Sciences",
                            Postgrad = true,
                            Undergrad = true
                        },
                        new
                        {
                            SACoursesId = 9,
                            Cost = 200000m,
                            Course = "Pharmacy",
                            Field = "Health Sciences",
                            Postgrad = true,
                            Undergrad = false
                        },
                        new
                        {
                            SACoursesId = 10,
                            Cost = 200000m,
                            Course = "Dentistry",
                            Field = "Health Sciences",
                            Postgrad = true,
                            Undergrad = true
                        },
                        new
                        {
                            SACoursesId = 11,
                            Cost = 200000m,
                            Course = "Radiography",
                            Field = "Health Sciences",
                            Postgrad = true,
                            Undergrad = true
                        },
                        new
                        {
                            SACoursesId = 12,
                            Cost = 200000m,
                            Course = "Physiotherapy",
                            Field = "Health Sciences",
                            Postgrad = true,
                            Undergrad = true
                        },
                        new
                        {
                            SACoursesId = 13,
                            Cost = 200000m,
                            Course = "Medical Emergency and Paramedics",
                            Field = "Health Sciences",
                            Postgrad = true,
                            Undergrad = true
                        },
                        new
                        {
                            SACoursesId = 14,
                            Cost = 150000m,
                            Course = "Civil Engineering",
                            Field = "Building Sciences",
                            Postgrad = true,
                            Undergrad = true
                        },
                        new
                        {
                            SACoursesId = 15,
                            Cost = 150000m,
                            Course = "Construction Economics and Management",
                            Field = "Building Sciences",
                            Postgrad = true,
                            Undergrad = true
                        },
                        new
                        {
                            SACoursesId = 16,
                            Cost = 150000m,
                            Course = "Hazard Safety and Risk Management",
                            Field = "Building Sciences",
                            Postgrad = true,
                            Undergrad = true
                        },
                        new
                        {
                            SACoursesId = 17,
                            Cost = 150000m,
                            Course = "Quantity Survey",
                            Field = "Building Sciences",
                            Postgrad = true,
                            Undergrad = true
                        },
                        new
                        {
                            SACoursesId = 18,
                            Cost = 165000m,
                            Course = "Policing and Criminology",
                            Field = "Counselling Sciences, Policing and Investigative Studies",
                            Postgrad = true,
                            Undergrad = true
                        },
                        new
                        {
                            SACoursesId = 19,
                            Cost = 165000m,
                            Course = "Forensics and Ballistics",
                            Field = "Counselling Sciences, Policing and Investigative Studies",
                            Postgrad = true,
                            Undergrad = true
                        },
                        new
                        {
                            SACoursesId = 20,
                            Cost = 165000m,
                            Course = "Communication, Broadcasting and Journalism",
                            Field = "Communiction Sciences",
                            Postgrad = true,
                            Undergrad = true
                        },
                        new
                        {
                            SACoursesId = 21,
                            Cost = 165000m,
                            Course = "Film studies and Photography",
                            Field = "Communication Sciences",
                            Postgrad = true,
                            Undergrad = true
                        },
                        new
                        {
                            SACoursesId = 22,
                            Cost = 85000m,
                            Course = "Applied Arts, Digital Arts, Visual Arts, Artium",
                            Field = "Arts",
                            Postgrad = true,
                            Undergrad = false
                        },
                        new
                        {
                            SACoursesId = 23,
                            Cost = 85000m,
                            Course = "Fashion Design and Graphic Design",
                            Field = "Arts",
                            Postgrad = true,
                            Undergrad = false
                        },
                        new
                        {
                            SACoursesId = 24,
                            Cost = 85000m,
                            Course = "Textile and Clothing Technology",
                            Field = "Arts",
                            Postgrad = true,
                            Undergrad = true
                        },
                        new
                        {
                            SACoursesId = 25,
                            Cost = 85000m,
                            Course = "Fine Arts",
                            Field = "Arts",
                            Postgrad = true,
                            Undergrad = true
                        },
                        new
                        {
                            SACoursesId = 26,
                            Cost = 85000m,
                            Course = "Foundation and Early Childhood Development",
                            Field = "Special and Technology Education and Linguistics",
                            Postgrad = true,
                            Undergrad = true
                        },
                        new
                        {
                            SACoursesId = 27,
                            Cost = 85000m,
                            Course = "Special Education and Technology",
                            Field = "Special and Technology Education and Linguistics",
                            Postgrad = true,
                            Undergrad = true
                        },
                        new
                        {
                            SACoursesId = 28,
                            Cost = 85000m,
                            Course = "Mathematics and Science Education",
                            Field = "Special and Technology Education and Linguistics",
                            Postgrad = true,
                            Undergrad = false
                        },
                        new
                        {
                            SACoursesId = 29,
                            Cost = 120000m,
                            Course = "Energy Planning",
                            Field = "Governance and Accountability",
                            Postgrad = true,
                            Undergrad = false
                        },
                        new
                        {
                            SACoursesId = 30,
                            Cost = 120000m,
                            Course = "Trail Advocacy",
                            Field = "Governance and Accountability",
                            Postgrad = true,
                            Undergrad = false
                        },
                        new
                        {
                            SACoursesId = 31,
                            Cost = 120000m,
                            Course = "Contract Negotiation",
                            Field = "Governance and Accountability",
                            Postgrad = true,
                            Undergrad = false
                        },
                        new
                        {
                            SACoursesId = 32,
                            Cost = 120000m,
                            Course = "Mediation and Arbitration",
                            Field = "Governance and Accountability",
                            Postgrad = true,
                            Undergrad = false
                        },
                        new
                        {
                            SACoursesId = 33,
                            Cost = 120000m,
                            Course = "Prosecuting of Economic Offenses",
                            Field = "Governance and Accountability",
                            Postgrad = true,
                            Undergrad = false
                        },
                        new
                        {
                            SACoursesId = 34,
                            Cost = 90000m,
                            Course = "Geology",
                            Field = "Mining",
                            Postgrad = true,
                            Undergrad = true
                        },
                        new
                        {
                            SACoursesId = 35,
                            Cost = 90000m,
                            Course = "Geo-mechanism",
                            Field = "Mining",
                            Postgrad = true,
                            Undergrad = true
                        },
                        new
                        {
                            SACoursesId = 36,
                            Cost = 90000m,
                            Course = "Geo-chemistry",
                            Field = "Mining",
                            Postgrad = true,
                            Undergrad = true
                        },
                        new
                        {
                            SACoursesId = 37,
                            Cost = 90000m,
                            Course = "Geo-physics",
                            Field = "Mining",
                            Postgrad = true,
                            Undergrad = true
                        },
                        new
                        {
                            SACoursesId = 38,
                            Cost = 90000m,
                            Course = "Mining Engineering and Mineral Extraction",
                            Field = "Mining",
                            Postgrad = true,
                            Undergrad = true
                        },
                        new
                        {
                            SACoursesId = 39,
                            Cost = 90000m,
                            Course = "Metallurgy Engineering",
                            Field = "Mining",
                            Postgrad = true,
                            Undergrad = true
                        },
                        new
                        {
                            SACoursesId = 40,
                            Cost = 120000m,
                            Course = "Materials Science and Engineering",
                            Field = "Engineering Science and Technology",
                            Postgrad = true,
                            Undergrad = true
                        },
                        new
                        {
                            SACoursesId = 41,
                            Cost = 120000m,
                            Course = "Industrial and Systems Engineering",
                            Field = "Engineering Science and Technology",
                            Postgrad = true,
                            Undergrad = true
                        },
                        new
                        {
                            SACoursesId = 42,
                            Cost = 120000m,
                            Course = "Mechanical, Nuclear and Mechatronics Engineering",
                            Field = "Engineering Science and Technology",
                            Postgrad = true,
                            Undergrad = true
                        },
                        new
                        {
                            SACoursesId = 43,
                            Cost = 120000m,
                            Course = "Auto-electricity Engineering",
                            Field = "Engineering Science and Technology",
                            Postgrad = true,
                            Undergrad = true
                        },
                        new
                        {
                            SACoursesId = 44,
                            Cost = 120000m,
                            Course = "Chemical Engineering",
                            Field = "Engineering Science and Technology",
                            Postgrad = true,
                            Undergrad = true
                        },
                        new
                        {
                            SACoursesId = 45,
                            Cost = 120000m,
                            Course = "Electrical Engineering",
                            Field = "Engineering Science and Technology",
                            Postgrad = true,
                            Undergrad = true
                        },
                        new
                        {
                            SACoursesId = 46,
                            Cost = 120000m,
                            Course = "Computer Engineering",
                            Field = "Engineering Science and Technology",
                            Postgrad = true,
                            Undergrad = true
                        },
                        new
                        {
                            SACoursesId = 47,
                            Cost = 120000m,
                            Course = "Systems Engineering",
                            Field = "Engineering Science and Technology",
                            Postgrad = true,
                            Undergrad = true
                        },
                        new
                        {
                            SACoursesId = 48,
                            Cost = 120000m,
                            Course = "Information and Communication Technology",
                            Field = "Engineering Science and Technology",
                            Postgrad = true,
                            Undergrad = false
                        },
                        new
                        {
                            SACoursesId = 49,
                            Cost = 120000m,
                            Course = "Geographic Information Systems, Remote Sensing, Radar and Sonar Technology, and Cartography",
                            Field = "Engineering Science and Technology",
                            Postgrad = true,
                            Undergrad = true
                        },
                        new
                        {
                            SACoursesId = 50,
                            Cost = 105000m,
                            Course = "Meteorology and Agrometeorology",
                            Field = "Disaster and Water Management",
                            Postgrad = true,
                            Undergrad = true
                        },
                        new
                        {
                            SACoursesId = 51,
                            Cost = 105000m,
                            Course = "Hydrology, Hydrogeology and Water Resources Management",
                            Field = "Disaster and Water Management",
                            Postgrad = true,
                            Undergrad = true
                        },
                        new
                        {
                            SACoursesId = 52,
                            Cost = 105000m,
                            Course = "Water Engineering and Water Harvesting",
                            Field = "Disaster and Water Management",
                            Postgrad = true,
                            Undergrad = true
                        },
                        new
                        {
                            SACoursesId = 53,
                            Cost = 105000m,
                            Course = "Water Laboratory Technology",
                            Field = "Disaster and Water Management",
                            Postgrad = true,
                            Undergrad = true
                        },
                        new
                        {
                            SACoursesId = 54,
                            Cost = 105000m,
                            Course = "Disaster Management",
                            Field = "Disaster and Water Management",
                            Postgrad = true,
                            Undergrad = false
                        },
                        new
                        {
                            SACoursesId = 55,
                            Cost = 132000m,
                            Course = "Paleontology",
                            Field = "Tourism, Museum and Heritage Studies",
                            Postgrad = true,
                            Undergrad = true
                        },
                        new
                        {
                            SACoursesId = 56,
                            Cost = 132000m,
                            Course = "Food Engineering",
                            Field = "Tourism, Museum and Heritage Studies",
                            Postgrad = true,
                            Undergrad = true
                        },
                        new
                        {
                            SACoursesId = 57,
                            Cost = 132000m,
                            Course = "Food Processing and Technology",
                            Field = "Tourism, Museum and Heritage Studies",
                            Postgrad = true,
                            Undergrad = true
                        },
                        new
                        {
                            SACoursesId = 58,
                            Cost = 132000m,
                            Course = "Zoology",
                            Field = "Tourism, Museum and Heritage Studies",
                            Postgrad = true,
                            Undergrad = true
                        },
                        new
                        {
                            SACoursesId = 59,
                            Cost = 132000m,
                            Course = "Ethnology",
                            Field = "Tourism, Museum and Heritage Studies",
                            Postgrad = true,
                            Undergrad = true
                        },
                        new
                        {
                            SACoursesId = 60,
                            Cost = 175000m,
                            Course = "Acturial Sciences, Insurance and Financial Mathematics/Science",
                            Field = "Acturial Sciences",
                            Postgrad = true,
                            Undergrad = true
                        },
                        new
                        {
                            SACoursesId = 61,
                            Cost = 155000m,
                            Course = "Business Adminstration",
                            Field = "Investment Sciences and Management",
                            Postgrad = true,
                            Undergrad = false
                        },
                        new
                        {
                            SACoursesId = 62,
                            Cost = 155000m,
                            Course = "BSc Investment Sciences",
                            Field = "Investment Sciences and Management",
                            Postgrad = true,
                            Undergrad = false
                        },
                        new
                        {
                            SACoursesId = 63,
                            Cost = 155000m,
                            Course = "BSc Quantitative Risk Management (QRM)",
                            Field = "Investment Sciences and Management",
                            Postgrad = true,
                            Undergrad = true
                        },
                        new
                        {
                            SACoursesId = 64,
                            Cost = 155000m,
                            Course = "Supply Chain Management and Logistics",
                            Field = "Investment Sciences and Management",
                            Postgrad = true,
                            Undergrad = true
                        },
                        new
                        {
                            SACoursesId = 65,
                            Cost = 155000m,
                            Course = "Conservation, Ecology, Arid and Range Management",
                            Field = "Forestry, Agriculture, Animal and Environmental Sciences",
                            Postgrad = false,
                            Undergrad = true
                        },
                        new
                        {
                            SACoursesId = 66,
                            Cost = 155000m,
                            Course = "Veterinary Medicine",
                            Field = "Forestry, Agriculture, Animal and Environmental Sciences",
                            Postgrad = true,
                            Undergrad = true
                        },
                        new
                        {
                            SACoursesId = 67,
                            Cost = 155000m,
                            Course = "Agriculture Engineering",
                            Field = "Forestry, Agriculture, Animal and Environmental Sciences",
                            Postgrad = true,
                            Undergrad = false
                        },
                        new
                        {
                            SACoursesId = 68,
                            Cost = 155000m,
                            Course = "Seed Technology",
                            Field = "Forestry, Agriculture, Animal and Environmental Sciences",
                            Postgrad = true,
                            Undergrad = true
                        },
                        new
                        {
                            SACoursesId = 69,
                            Cost = 155000m,
                            Course = "Fertilizer Production",
                            Field = "Forestry, Agriculture, Animal and Environmental Sciences",
                            Postgrad = true,
                            Undergrad = false
                        },
                        new
                        {
                            SACoursesId = 70,
                            Cost = 155000m,
                            Course = "Horticulture/Greenhouse",
                            Field = "Forestry, Agriculture, Animal and Environmental Sciences",
                            Postgrad = true,
                            Undergrad = false
                        },
                        new
                        {
                            SACoursesId = 71,
                            Cost = 200000m,
                            Course = "Nuclear Medicine Specialist",
                            Field = "Health Sciences",
                            Postgrad = true,
                            Undergrad = true
                        },
                        new
                        {
                            SACoursesId = 72,
                            Cost = 200000m,
                            Course = "Analytical Chemistry",
                            Field = "Health Sciences",
                            Postgrad = true,
                            Undergrad = true
                        },
                        new
                        {
                            SACoursesId = 73,
                            Cost = 200000m,
                            Course = "Biomedical Engineering",
                            Field = "Health Sciences",
                            Postgrad = true,
                            Undergrad = true
                        },
                        new
                        {
                            SACoursesId = 74,
                            Cost = 200000m,
                            Course = "Clinical Technology",
                            Field = "Health Sciences",
                            Postgrad = true,
                            Undergrad = true
                        },
                        new
                        {
                            SACoursesId = 75,
                            Cost = 200000m,
                            Course = "Pathophysiology",
                            Field = "Health Sciences",
                            Postgrad = true,
                            Undergrad = true
                        },
                        new
                        {
                            SACoursesId = 76,
                            Cost = 200000m,
                            Course = "Auidiology and Speech-language pathology",
                            Field = "Health Sciences",
                            Postgrad = true,
                            Undergrad = true
                        },
                        new
                        {
                            SACoursesId = 77,
                            Cost = 200000m,
                            Course = "Orthopedics",
                            Field = "Health Sciences",
                            Postgrad = true,
                            Undergrad = true
                        },
                        new
                        {
                            SACoursesId = 78,
                            Cost = 200000m,
                            Course = "Radiation Oncology",
                            Field = "Health Sciences",
                            Postgrad = true,
                            Undergrad = true
                        },
                        new
                        {
                            SACoursesId = 79,
                            Cost = 200000m,
                            Course = "Neurosurgeon",
                            Field = "Health Sciences",
                            Postgrad = true,
                            Undergrad = false
                        },
                        new
                        {
                            SACoursesId = 80,
                            Cost = 200000m,
                            Course = "Neurology",
                            Field = "Health Sciences",
                            Postgrad = true,
                            Undergrad = false
                        });
                });

            modelBuilder.Entity("StudentLoan.Models.SAUniCourse", b =>
                {
                    b.Property<int>("SACoursesId")
                        .HasColumnType("int");

                    b.Property<int>("SAUniversityId")
                        .HasColumnType("int");

                    b.HasKey("SACoursesId", "SAUniversityId");

                    b.HasIndex("SAUniversityId");

                    b.ToTable("SAUniCourses");

                    b.HasData(
                        new
                        {
                            SACoursesId = 8,
                            SAUniversityId = 1
                        },
                        new
                        {
                            SACoursesId = 78,
                            SAUniversityId = 1
                        },
                        new
                        {
                            SACoursesId = 34,
                            SAUniversityId = 1
                        },
                        new
                        {
                            SACoursesId = 36,
                            SAUniversityId = 1
                        },
                        new
                        {
                            SACoursesId = 14,
                            SAUniversityId = 1
                        },
                        new
                        {
                            SACoursesId = 17,
                            SAUniversityId = 1
                        },
                        new
                        {
                            SACoursesId = 50,
                            SAUniversityId = 1
                        },
                        new
                        {
                            SACoursesId = 54,
                            SAUniversityId = 1
                        },
                        new
                        {
                            SACoursesId = 60,
                            SAUniversityId = 1
                        },
                        new
                        {
                            SACoursesId = 61,
                            SAUniversityId = 1
                        },
                        new
                        {
                            SACoursesId = 18,
                            SAUniversityId = 1
                        },
                        new
                        {
                            SACoursesId = 20,
                            SAUniversityId = 1
                        },
                        new
                        {
                            SACoursesId = 26,
                            SAUniversityId = 1
                        },
                        new
                        {
                            SACoursesId = 27,
                            SAUniversityId = 1
                        },
                        new
                        {
                            SACoursesId = 8,
                            SAUniversityId = 2
                        },
                        new
                        {
                            SACoursesId = 11,
                            SAUniversityId = 2
                        },
                        new
                        {
                            SACoursesId = 10,
                            SAUniversityId = 2
                        },
                        new
                        {
                            SACoursesId = 78,
                            SAUniversityId = 2
                        },
                        new
                        {
                            SACoursesId = 34,
                            SAUniversityId = 2
                        },
                        new
                        {
                            SACoursesId = 37,
                            SAUniversityId = 2
                        },
                        new
                        {
                            SACoursesId = 44,
                            SAUniversityId = 2
                        },
                        new
                        {
                            SACoursesId = 45,
                            SAUniversityId = 2
                        },
                        new
                        {
                            SACoursesId = 46,
                            SAUniversityId = 2
                        },
                        new
                        {
                            SACoursesId = 47,
                            SAUniversityId = 2
                        },
                        new
                        {
                            SACoursesId = 48,
                            SAUniversityId = 2
                        },
                        new
                        {
                            SACoursesId = 1,
                            SAUniversityId = 2
                        },
                        new
                        {
                            SACoursesId = 14,
                            SAUniversityId = 2
                        },
                        new
                        {
                            SACoursesId = 15,
                            SAUniversityId = 2
                        },
                        new
                        {
                            SACoursesId = 17,
                            SAUniversityId = 2
                        },
                        new
                        {
                            SACoursesId = 66,
                            SAUniversityId = 2
                        },
                        new
                        {
                            SACoursesId = 65,
                            SAUniversityId = 2
                        },
                        new
                        {
                            SACoursesId = 55,
                            SAUniversityId = 2
                        },
                        new
                        {
                            SACoursesId = 57,
                            SAUniversityId = 2
                        },
                        new
                        {
                            SACoursesId = 56,
                            SAUniversityId = 2
                        },
                        new
                        {
                            SACoursesId = 1,
                            SAUniversityId = 3
                        },
                        new
                        {
                            SACoursesId = 2,
                            SAUniversityId = 3
                        },
                        new
                        {
                            SACoursesId = 7,
                            SAUniversityId = 3
                        },
                        new
                        {
                            SACoursesId = 44,
                            SAUniversityId = 3
                        },
                        new
                        {
                            SACoursesId = 47,
                            SAUniversityId = 3
                        },
                        new
                        {
                            SACoursesId = 49,
                            SAUniversityId = 3
                        },
                        new
                        {
                            SACoursesId = 14,
                            SAUniversityId = 3
                        },
                        new
                        {
                            SACoursesId = 15,
                            SAUniversityId = 3
                        },
                        new
                        {
                            SACoursesId = 16,
                            SAUniversityId = 3
                        },
                        new
                        {
                            SACoursesId = 17,
                            SAUniversityId = 3
                        },
                        new
                        {
                            SACoursesId = 50,
                            SAUniversityId = 3
                        },
                        new
                        {
                            SACoursesId = 51,
                            SAUniversityId = 3
                        },
                        new
                        {
                            SACoursesId = 52,
                            SAUniversityId = 3
                        },
                        new
                        {
                            SACoursesId = 65,
                            SAUniversityId = 3
                        },
                        new
                        {
                            SACoursesId = 45,
                            SAUniversityId = 4
                        },
                        new
                        {
                            SACoursesId = 46,
                            SAUniversityId = 4
                        },
                        new
                        {
                            SACoursesId = 47,
                            SAUniversityId = 4
                        },
                        new
                        {
                            SACoursesId = 48,
                            SAUniversityId = 4
                        },
                        new
                        {
                            SACoursesId = 49,
                            SAUniversityId = 4
                        },
                        new
                        {
                            SACoursesId = 15,
                            SAUniversityId = 4
                        },
                        new
                        {
                            SACoursesId = 16,
                            SAUniversityId = 4
                        },
                        new
                        {
                            SACoursesId = 13,
                            SAUniversityId = 4
                        },
                        new
                        {
                            SACoursesId = 11,
                            SAUniversityId = 4
                        },
                        new
                        {
                            SACoursesId = 10,
                            SAUniversityId = 4
                        },
                        new
                        {
                            SACoursesId = 71,
                            SAUniversityId = 4
                        },
                        new
                        {
                            SACoursesId = 58,
                            SAUniversityId = 4
                        },
                        new
                        {
                            SACoursesId = 59,
                            SAUniversityId = 4
                        },
                        new
                        {
                            SACoursesId = 23,
                            SAUniversityId = 4
                        },
                        new
                        {
                            SACoursesId = 24,
                            SAUniversityId = 4
                        },
                        new
                        {
                            SACoursesId = 25,
                            SAUniversityId = 4
                        },
                        new
                        {
                            SACoursesId = 23,
                            SAUniversityId = 5
                        },
                        new
                        {
                            SACoursesId = 24,
                            SAUniversityId = 5
                        },
                        new
                        {
                            SACoursesId = 41,
                            SAUniversityId = 5
                        },
                        new
                        {
                            SACoursesId = 42,
                            SAUniversityId = 5
                        },
                        new
                        {
                            SACoursesId = 44,
                            SAUniversityId = 5
                        },
                        new
                        {
                            SACoursesId = 45,
                            SAUniversityId = 5
                        },
                        new
                        {
                            SACoursesId = 14,
                            SAUniversityId = 5
                        },
                        new
                        {
                            SACoursesId = 15,
                            SAUniversityId = 5
                        },
                        new
                        {
                            SACoursesId = 16,
                            SAUniversityId = 5
                        },
                        new
                        {
                            SACoursesId = 17,
                            SAUniversityId = 5
                        },
                        new
                        {
                            SACoursesId = 52,
                            SAUniversityId = 5
                        },
                        new
                        {
                            SACoursesId = 44,
                            SAUniversityId = 6
                        },
                        new
                        {
                            SACoursesId = 45,
                            SAUniversityId = 6
                        },
                        new
                        {
                            SACoursesId = 46,
                            SAUniversityId = 6
                        },
                        new
                        {
                            SACoursesId = 47,
                            SAUniversityId = 6
                        },
                        new
                        {
                            SACoursesId = 48,
                            SAUniversityId = 6
                        },
                        new
                        {
                            SACoursesId = 49,
                            SAUniversityId = 6
                        },
                        new
                        {
                            SACoursesId = 17,
                            SAUniversityId = 6
                        },
                        new
                        {
                            SACoursesId = 77,
                            SAUniversityId = 6
                        },
                        new
                        {
                            SACoursesId = 40,
                            SAUniversityId = 6
                        },
                        new
                        {
                            SACoursesId = 41,
                            SAUniversityId = 6
                        },
                        new
                        {
                            SACoursesId = 34,
                            SAUniversityId = 7
                        },
                        new
                        {
                            SACoursesId = 37,
                            SAUniversityId = 7
                        },
                        new
                        {
                            SACoursesId = 20,
                            SAUniversityId = 7
                        },
                        new
                        {
                            SACoursesId = 55,
                            SAUniversityId = 7
                        },
                        new
                        {
                            SACoursesId = 56,
                            SAUniversityId = 7
                        },
                        new
                        {
                            SACoursesId = 57,
                            SAUniversityId = 7
                        },
                        new
                        {
                            SACoursesId = 58,
                            SAUniversityId = 7
                        },
                        new
                        {
                            SACoursesId = 65,
                            SAUniversityId = 7
                        },
                        new
                        {
                            SACoursesId = 7,
                            SAUniversityId = 7
                        },
                        new
                        {
                            SACoursesId = 1,
                            SAUniversityId = 8
                        },
                        new
                        {
                            SACoursesId = 7,
                            SAUniversityId = 8
                        },
                        new
                        {
                            SACoursesId = 11,
                            SAUniversityId = 8
                        },
                        new
                        {
                            SACoursesId = 15,
                            SAUniversityId = 8
                        },
                        new
                        {
                            SACoursesId = 43,
                            SAUniversityId = 8
                        },
                        new
                        {
                            SACoursesId = 45,
                            SAUniversityId = 8
                        },
                        new
                        {
                            SACoursesId = 46,
                            SAUniversityId = 8
                        },
                        new
                        {
                            SACoursesId = 47,
                            SAUniversityId = 8
                        },
                        new
                        {
                            SACoursesId = 48,
                            SAUniversityId = 8
                        },
                        new
                        {
                            SACoursesId = 49,
                            SAUniversityId = 8
                        },
                        new
                        {
                            SACoursesId = 1,
                            SAUniversityId = 9
                        },
                        new
                        {
                            SACoursesId = 16,
                            SAUniversityId = 9
                        },
                        new
                        {
                            SACoursesId = 44,
                            SAUniversityId = 9
                        },
                        new
                        {
                            SACoursesId = 45,
                            SAUniversityId = 9
                        },
                        new
                        {
                            SACoursesId = 41,
                            SAUniversityId = 9
                        },
                        new
                        {
                            SACoursesId = 42,
                            SAUniversityId = 9
                        },
                        new
                        {
                            SACoursesId = 36,
                            SAUniversityId = 9
                        },
                        new
                        {
                            SACoursesId = 22,
                            SAUniversityId = 9
                        },
                        new
                        {
                            SACoursesId = 25,
                            SAUniversityId = 9
                        },
                        new
                        {
                            SACoursesId = 77,
                            SAUniversityId = 9
                        },
                        new
                        {
                            SACoursesId = 78,
                            SAUniversityId = 9
                        },
                        new
                        {
                            SACoursesId = 79,
                            SAUniversityId = 9
                        },
                        new
                        {
                            SACoursesId = 80,
                            SAUniversityId = 9
                        },
                        new
                        {
                            SACoursesId = 12,
                            SAUniversityId = 9
                        },
                        new
                        {
                            SACoursesId = 65,
                            SAUniversityId = 9
                        },
                        new
                        {
                            SACoursesId = 60,
                            SAUniversityId = 9
                        },
                        new
                        {
                            SACoursesId = 62,
                            SAUniversityId = 9
                        },
                        new
                        {
                            SACoursesId = 63,
                            SAUniversityId = 9
                        },
                        new
                        {
                            SACoursesId = 64,
                            SAUniversityId = 9
                        },
                        new
                        {
                            SACoursesId = 50,
                            SAUniversityId = 10
                        },
                        new
                        {
                            SACoursesId = 53,
                            SAUniversityId = 10
                        },
                        new
                        {
                            SACoursesId = 65,
                            SAUniversityId = 10
                        },
                        new
                        {
                            SACoursesId = 8,
                            SAUniversityId = 10
                        },
                        new
                        {
                            SACoursesId = 42,
                            SAUniversityId = 10
                        },
                        new
                        {
                            SACoursesId = 34,
                            SAUniversityId = 11
                        },
                        new
                        {
                            SACoursesId = 35,
                            SAUniversityId = 11
                        },
                        new
                        {
                            SACoursesId = 36,
                            SAUniversityId = 11
                        },
                        new
                        {
                            SACoursesId = 37,
                            SAUniversityId = 11
                        },
                        new
                        {
                            SACoursesId = 38,
                            SAUniversityId = 11
                        },
                        new
                        {
                            SACoursesId = 39,
                            SAUniversityId = 11
                        },
                        new
                        {
                            SACoursesId = 43,
                            SAUniversityId = 11
                        },
                        new
                        {
                            SACoursesId = 45,
                            SAUniversityId = 11
                        },
                        new
                        {
                            SACoursesId = 14,
                            SAUniversityId = 11
                        },
                        new
                        {
                            SACoursesId = 15,
                            SAUniversityId = 11
                        },
                        new
                        {
                            SACoursesId = 16,
                            SAUniversityId = 11
                        },
                        new
                        {
                            SACoursesId = 17,
                            SAUniversityId = 11
                        },
                        new
                        {
                            SACoursesId = 7,
                            SAUniversityId = 11
                        },
                        new
                        {
                            SACoursesId = 8,
                            SAUniversityId = 11
                        },
                        new
                        {
                            SACoursesId = 10,
                            SAUniversityId = 11
                        },
                        new
                        {
                            SACoursesId = 12,
                            SAUniversityId = 11
                        },
                        new
                        {
                            SACoursesId = 76,
                            SAUniversityId = 11
                        },
                        new
                        {
                            SACoursesId = 77,
                            SAUniversityId = 11
                        },
                        new
                        {
                            SACoursesId = 78,
                            SAUniversityId = 11
                        },
                        new
                        {
                            SACoursesId = 73,
                            SAUniversityId = 11
                        },
                        new
                        {
                            SACoursesId = 79,
                            SAUniversityId = 11
                        },
                        new
                        {
                            SACoursesId = 80,
                            SAUniversityId = 11
                        },
                        new
                        {
                            SACoursesId = 27,
                            SAUniversityId = 12
                        },
                        new
                        {
                            SACoursesId = 11,
                            SAUniversityId = 12
                        },
                        new
                        {
                            SACoursesId = 17,
                            SAUniversityId = 12
                        },
                        new
                        {
                            SACoursesId = 45,
                            SAUniversityId = 12
                        });
                });

            modelBuilder.Entity("StudentLoan.Models.SAUniversity", b =>
                {
                    b.Property<int>("SAUniversityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SAUniversityId");

                    b.ToTable("SAUniversities");

                    b.HasData(
                        new
                        {
                            SAUniversityId = 1,
                            Name = "University of the Free State"
                        },
                        new
                        {
                            SAUniversityId = 2,
                            Name = "University of Cape Town"
                        },
                        new
                        {
                            SAUniversityId = 3,
                            Name = "University of Witwatersrand"
                        },
                        new
                        {
                            SAUniversityId = 4,
                            Name = "University of Johannesburg"
                        },
                        new
                        {
                            SAUniversityId = 5,
                            Name = "Cape Peninsula University of Technology"
                        },
                        new
                        {
                            SAUniversityId = 6,
                            Name = "Tshwane University of Technology"
                        },
                        new
                        {
                            SAUniversityId = 7,
                            Name = "Rhodes University"
                        },
                        new
                        {
                            SAUniversityId = 8,
                            Name = "Nelson Mandela Metropolitan University"
                        },
                        new
                        {
                            SAUniversityId = 9,
                            Name = "Stellenbosch University"
                        },
                        new
                        {
                            SAUniversityId = 10,
                            Name = "University of Kwa-Zulu Natal"
                        },
                        new
                        {
                            SAUniversityId = 11,
                            Name = "University of Pretoria"
                        },
                        new
                        {
                            SAUniversityId = 12,
                            Name = "Central University of Technology"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("StudentLoan.Models.Entities.Application", b =>
                {
                    b.HasOne("StudentLoan.Models.SAUniversity", "Institution2")
                        .WithMany()
                        .HasForeignKey("Institution2SAUniversityId");

                    b.HasOne("StudentLoan.Models.SAUniversity", "Institution3")
                        .WithMany()
                        .HasForeignKey("Institution3SAUniversityId");

                    b.HasOne("StudentLoan.Models.SACourses", "Programme2")
                        .WithMany()
                        .HasForeignKey("Programme2SACoursesId");

                    b.HasOne("StudentLoan.Models.SACourses", "Programme3")
                        .WithMany()
                        .HasForeignKey("Programme3SACoursesId");

                    b.Navigation("Institution2");

                    b.Navigation("Institution3");

                    b.Navigation("Programme2");

                    b.Navigation("Programme3");
                });

            modelBuilder.Entity("StudentLoan.Models.SAUniCourse", b =>
                {
                    b.HasOne("StudentLoan.Models.SACourses", "Course")
                        .WithMany("UniCourses")
                        .HasForeignKey("SACoursesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("StudentLoan.Models.SAUniversity", "University")
                        .WithMany("UniCourses")
                        .HasForeignKey("SAUniversityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");

                    b.Navigation("University");
                });

            modelBuilder.Entity("StudentLoan.Models.SACourses", b =>
                {
                    b.Navigation("UniCourses");
                });

            modelBuilder.Entity("StudentLoan.Models.SAUniversity", b =>
                {
                    b.Navigation("UniCourses");
                });
#pragma warning restore 612, 618
        }
    }
}
